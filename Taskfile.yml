# https://taskfile.dev

version: '3'

dotenv: ['.env']
output: prefixed
silent: true

vars:
  CLUSTER_NAME: kubeflow
  CONTEXT_NAME: "k3d-{{.CLUSTER_NAME}}"
  KUBECTL: "kubectl --context={{.CONTEXT_NAME}}"
  KUBEAPPLY: "{{.KUBECTL}} apply"
  KUSTOMIZE: "{{.KUBECTL}} kustomize"
  KUSTOMIZEAPPLY: "{{.KUBEAPPLY}} --kustomize"
  KUBEWAIT: "{{.KUBECTL}} wait"
  KUBEWAIT_AVAIL: "{{.KUBEWAIT}} --for=condition=available"
  KUBEWAIT_READY: "{{.KUBEWAIT}} --for=condition=ready"
  KUBECREATE: "{{.KUBECTL}} create -o yaml --dry-run=client"

  TODAY: '{{ now | date "2006-01-02T15:04:05-07:00" }}'
  BLACK: \033[:0;30m
  RED: \033[:0;31m
  GREEN: \033[:0;32m
  ORANGE: \033[:0;33m
  BLUE: \033[:0;34m
  PURPLE: \033[:0;35m
  CYAN: \033[:0;36m
  LIGHT_GRAY: \033[:0;37m
  DARK_GRAY: \033[:1;30m
  LIGHT_RED: \033[:1;31m
  LIGHT_GREEN: \033[:1;32m
  YELLOW: \033[:1;33m
  LIGHT_BLUE: \033[:1;34m
  LIGHT_PURPLE: \033[:1;35m
  LIGHT_CYAN: \033[:1;36m
  WHITE: \033[:1;37m
  NOCOLOR: \u001b[0m
  REVERSED: \u001b[7m

tasks:
  default:
    prefix: ⚙️
    cmds:
    - task -l
    silent: true

  k3d:create:
    prefix: k3d > create
    desc: create k3d cluster
    cmds:
    - k3d cluster create --config=cluster/config.yaml

  k3d:destroy:
    prefix: k3d > destroy
    desc: destroy k3d cluster
    cmds:
    - "k3d cluster delete {{.CLUSTER_NAME}}"

  k3d:start:
    prefix: k3d > start
    desc: starts kubeflow environment
    cmds:
    - "k3d cluster start {{.CLUSTER_NAME}}"

  k3d:stop:
    prefix: k3d > stop
    desc: stop kubeflow environment
    cmds:
    - "k3d cluster stop {{.CLUSTER_NAME}}"

  k3d:test:
    prefix: k3d > test
    desc: test kubeflow
    cmds:
    - task: stack:das:preview

  stack:das:
    prefix: stacks > das
    desc: install the DAS Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZEAPPLY}} stacks/das"

  stack:das:preview:
    prefix: stacks > das
    desc: install the DAS Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZE}} stacks/das --output=../manifests/das.yaml"

  stack:argo:
    prefix: stacks > argo
    desc: install the Argo Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZEAPPLY}} stacks/argo"

  stack:argo:preview:
    prefix: stacks > argo
    desc: install the Argo Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZE}} stacks/argo --output=../manifests/argo.yaml"

  stack:local:
    prefix: stacks > local
    desc: install the Local Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZEAPPLY}} stacks/local"

  stack:local:preview:
    prefix: stacks > local
    desc: install the Local Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZE}} stacks/local --output=../manifests/local.yaml"

  stack:upstream:
    prefix: stacks > upstream
    desc: install the Upstream Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZEAPPLY}} stacks/upstream"

  stack:upstream:preview:
    prefix: stacks > upstream
    desc: install the Upstream Stack
    dir: ./kustomize
    cmds:
    - "{{.KUSTOMIZE}} stacks/upstream --output=../manifests/upstream.yaml"
